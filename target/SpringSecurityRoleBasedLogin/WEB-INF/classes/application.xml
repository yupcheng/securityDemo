<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd">

    <description>Spring公共配置 </description>
    <!-- 引入Spring的公用配置，包括数据源、注解解析和事务管理 -->
    <import resource="classpath*:/spring/spring-servlet.xml"/>

    <import resource="classpath*:/spring/spring-security.xml"/>

    <!-- 定义上下文返回的消息的国际化-->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource" >
        <property name="basename"
                  value="classpath:messages"/>
    </bean>



<!--

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"></property>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass"><value>${jdbc.driverClassName}</value></property>
        <property name="jdbcUrl"><value>${jdbc.url}</value></property>
        <property name="user"><value>${jdbc.username}</value></property>
        <property name="password"><value>${jdbc.password}</value></property>
        <property name="minPoolSize"><value>10</value></property>
        <property name="maxPoolSize"><value>20</value></property>
        <property name="maxIdleTime"><value>600</value></property>
        <property name="acquireIncrement"><value>2</value></property>
        <property name="maxStatements"><value>0</value></property>
        <property name="maxStatementsPerConnection"><value>20</value></property>
        <property name="initialPoolSize"><value>20</value></property>
        <property name="idleConnectionTestPeriod"><value>600</value></property>
        <property name="acquireRetryAttempts"><value>30</value></property>
        <property name="breakAfterAcquireFailure"><value>false</value></property>
        <property name="testConnectionOnCheckout"><value>false</value></property>
    </bean>


    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.yu.spring.entity" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.use_sql_comments">false</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
            </props>
        </property>
    </bean>
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    &lt;!&ndash;启动注解用注解来管理事务&ndash;&gt;
    <tx:annotation-driven transaction-manager="transactionManager"/>

-->

<!--
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="productServiceMethods" expression="execution(* com.yu.spring.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="productServiceMethods"/>
    </aop:config>-->
</beans>